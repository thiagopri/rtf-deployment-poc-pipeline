
/*
Pipeline script for 
Version 1.01
*/


import java.text.SimpleDateFormat
import java.time.*
import java.time.format.DateTimeFormatter

def deployables = ""

pipeline {
	agent none
	
	tools {
		maven 'Maven'
		jdk 'JDK'
	}

		
	environment {
		JOB_NAME = "acg-cdx-membership-proxy"
		ARTIFACTORY_PATH = "libs-release-local/com/acg/services/api"
		DEPLOYMENT_FOLDER_BUILDNUMBER = "/opt/app/jenkins/jobs/${JOB_NAME}/workspace/Artifact/com/acg/services/api/${JOB_NAME}/${JOB_NAME}-1.0.0-${BUILD_NUMBER}"
		DEPLOYMENT_FOLDER_ARTIFACTVERSION = "/opt/app/jenkins/jobs/${JOB_NAME}/workspace/Artifact/com/acg/services/api/${JOB_NAME}/${JOB_NAME}-1.0.0-${ArtifactVersion}"
	}

	stages{
		stage('Build and Test') {
			agent any	   		
			steps {
				sh 'echo build and test'
				//sh 'mvn -f ${JOB_NAME}/pom.xml -B -U -e -V clean package'
			}
		}
		
		stage('Update pom version') {
			agent any	   		
			steps {
				sh 'printenv'
				//sh 'mvn -f ${JOB_NAME}/pom.xml build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion} versions:commit'
				//sh 'mvn -f ${JOB_NAME}/pom.xml build-helper:parse-version versions:set -DnewVersion=\\${parsedVersion.majorVersion}.\\${parsedVersion.minorVersion}.${BUILD_NUMBER} versions:commit'
				//GIT PAT = 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
				sh 'git config user.name "Build Agent"'
				sh 'git config user.email "cicd_agent@acg.aaa.com"'
				sh 'git checkout -q ${GIT_BRANCH}'
				sh 'git pull'
				sh 'mvn -f ${JOB_NAME}/pom.xml build-helper:parse-version versions:set -DnewVersion=\\${parsedVersion.majorVersion}.\\${parsedVersion.minorVersion}.\\${parsedVersion.nextIncrementalVersion} versions:commit'
				sh 'git commit -q -a -m "Asset version bumped ***NO_CI***"'
				withCredentials([gitUsernamePassword(credentialsId: 'jenkins-new', gitToolName: 'Default')]) {
					sh 'git push -q'
				}

			}
		}

		//dev Deployment
		stage('Deploy to Anypoint Exchange'){
			agent any	   		
			steps {
				sh 'echo deploy exchange'
				//sh 'mvn -f ${JOB_NAME}/pom.xml -s settings.xml -U -V -e -B deploy -DskipTests'
			}	
		}

		//dev Deployment
		stage('Dev Deploy'){
			agent any	   		
			steps {
				sh 'echo deploy dev'
				//sh 'mvn -f ${JOB_NAME}/pom.xml -s settings.xml -U -V -e -B deploy -DskipTests -DmuleDeploy -Dapp.name=acg-cdx-membershipproxy-rfapi-dev-v1 -Denv="dev" -Danypoint.username="acgapiplatform" -Danypoint.password="AcgMulesoft@100" -Drtf.environment="DEV" -Danypoint.platform.client_id="087b2709f4ca42a7a49e1b2983bcbf31" -Danypoint.platform.client_secret="B4515383fBd142228B65cafABaDd90f0"'
			}	
		}

		stage ("Approval to deploy to Prod") {
			agent any        

			steps {
				sh 'echo sending email notification'
=				timeout(time: 60, unit: 'SECONDS') {
					input 'Do you want to proceed to the Deployment?'
				}
			}
		}



		//Deploy Prod Notification
		stage('Deploy Prod'){
			agent any		
			steps {
				sh 'echo deploying in PROD'
			}	
		}
	}



	post{
		
		always{
			agent any		
			cleanWs()
		}
		aborted{
			agent any		
			cleanWs()
		}
		failure{
			agent any		
			cleanWs()
		}
		success{
			agent any		
			cleanWs()
		}
	}


	


}
