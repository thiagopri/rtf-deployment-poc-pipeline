pipeline {
	agent none
	
	tools {
		maven 'Maven'
		jdk 'JDK'
	}

		
	environment {
		JOB_NAME = "acg-cdx-membership-proxy"
	}

	stages{
		stage('Build and Test') {
			agent any
			steps {
				sh 'echo skip'
				//sh 'mvn -f ${JOB_NAME}/pom.xml -B -U -e -V clean package'
			}
		}
		
		stage('Update pom version') {
			agent any
			steps {

				//Option 1  - not commmiting the pom.xml, but instead using the build number as minor version
				sh 'mvn -f ${JOB_NAME}/pom.xml build-helper:parse-version versions:set -DnewVersion=\\${parsedVersion.majorVersion}.\\${parsedVersion.minorVersion}.${BUILD_NUMBER} versions:commit'

				//Option 2 commmiting the pom.xml
				//GIT PAT = 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
				//sh 'git config user.name "Build Agent"'
				//sh 'git config user.email "cicd_agent@acg.aaa.com"'
				//sh 'git checkout -q ${GIT_BRANCH}'
				//sh 'git checkout -q $(echo "${GIT_BRANCH}" | sed "s@.*/@@")'
				//sh 'git pull -q'
				//sh 'mvn -f ${JOB_NAME}/pom.xml build-helper:parse-version versions:set -DnewVersion=\\${parsedVersion.majorVersion}.\\${parsedVersion.minorVersion}.\\${parsedVersion.nextIncrementalVersion} versions:commit'
				//sh 'git commit -q -a -m "Asset version bumped ***NO_CI***"'
				//withCredentials([gitUsernamePassword(credentialsId: 'github-thiagopri', gitToolName: 'Default')]) {
					//sh 'git push -q'
				//}

				//Stash is mandatory because we are using different agents across stages
				sh 'pwd'
				sh 'ls -la'
				sh 'cat ${JOB_NAME}/pom.xml'
				stash includes: '${JOB_NAME}/*.xml', name: 'pom_staging_area' 
			}
		}

		//dev Deployment
		stage('Deploy to Anypoint Exchange'){
			agent any
			steps {
				unstash 'pom_staging_area' 
				sh 'mvn -f ${JOB_NAME}/pom.xml -s settings.xml -U -V -e -B deploy -DskipTests'
			}	
		}

		//dev Deployment
		stage('Dev Deploy'){
			agent any
			
			steps {
				unstash 'pom_staging_area' 
				sh 'mvn -f ${JOB_NAME}/pom.xml -s settings.xml -U -V -e -B deploy -DskipTests -DmuleDeploy -Dapp.name=acg-cdx-membershipproxy-rfapi-dev-v1 -Drtf.target=acg-rtf-dev -Denv="dev" -Danypoint.username="acgapiplatform" -Danypoint.password="AcgMulesoft@100" -Drtf.environment="DEV" -Danypoint.platform.client_id="087b2709f4ca42a7a49e1b2983bcbf31" -Danypoint.platform.client_secret="B4515383fBd142228B65cafABaDd90f0"'
			}	
		}

		stage ("Approval to deploy to QA") {
			agent none
			steps {
                emailext (
					subject: "Deploy to QA - Approval Pending",
					body: """<p>There is a <b>QA</b> deployment pending for your approval: Job '${JOB_NAME} - ${BUILD_NUMBER}':</p>
					<p>Access the follow URL and approve/reject this deploument: <a href='${BUILD_URL}/input'>Approve/Reject</a></p>""",
					to: "thiagopri@gmail.com",
					from: "thiagopri@gmail.com"
                ) 		

				timeout(time: 72, unit: 'HOURS') {
					input 'Do you want to proceed to the Deployment?'
				}
			}
		}



		//Deploy Prod Notification
		stage('Deploy QA'){
			agent any
			steps {
				unstash 'pom_staging_area' 
				sh 'mvn -f ${JOB_NAME}/pom.xml -s settings.xml -U -V -e -B deploy -DskipTests -DmuleDeploy -Dapp.name=acg-cdx-membershipproxy-rfapi-qa-v1 -Drtf.target=acg-rtf-test -Denv="dev" -Danypoint.username="acgapiplatform" -Danypoint.password="AcgMulesoft@100" -Drtf.environment="QA" -Danypoint.platform.client_id="087b2709f4ca42a7a49e1b2983bcbf31" -Danypoint.platform.client_secret="B4515383fBd142228B65cafABaDd90f0"'
			}	
		}
	}



	post{
		
		always{
			agent any
			cleanWs()
		}
		aborted{
			agent any
			cleanWs()
		}
		failure{
			agent any
			cleanWs()
		}
		success{
			agent any
			cleanWs()
		}
	}


	


}
